plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.9.23"
    id 'org.jetbrains.intellij' version "1.17.3"
    id "org.jetbrains.grammarkit" version "2022.3.2.2"
    id 'org.jetbrains.changelog' version "1.3.1"
    id 'java'
}

group 'glsl.plugin'
version pluginVersion

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}

intellij {
//    version = 'IC-2022.2'
    version = 'IC-2024.1'
    updateSinceUntilBuild = true
}

runIde {
    buildSearchableOptions.enabled = false
    maxHeapSize = "4g"
}


generateParser {
    doFirst {
        delete 'src/main/gen/psi'
    }
    sourceFile = file('grammar/GlslGrammar.bnf')
    targetRootOutputDir = file('src/main/gen')
    pathToParser = '_GlslParser.java'
    pathToPsiRoot = 'psi'
}

generateLexer {
    dependsOn(generateParser)
    source = 'grammar/GlslLexer.flex'
    targetDir = 'src/main/gen/glsl'
    targetClass = '_GlslLexer.java'
    targetOutputDir = file('src/main/gen')
    sourceFile = file('grammar/GlslLexer.flex')
}

tasks.register('generateGrammarClean') {
    doFirst {
        delete 'src/main/gen'
    }
    finalizedBy(generateParser)
    finalizedBy(generateLexer)
}

patchPluginXml {
    def descriptionHtml = file('plugin-info/description.html').text
    changeNotes = changelog.get(pluginVersion).toHTML()
    pluginDescription = descriptionHtml
    sinceBuild = '223'
    untilBuild = '241.*'
}

changelog {
    version = pluginVersion
}

publishPlugin {
    token = System.getenv('PUBLISH_TOKEN')
}

sourceSets {
    main {
        java.srcDirs 'src/main/gen'
    }
}